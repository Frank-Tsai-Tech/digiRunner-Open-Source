name: Upload Release Assets

on:
  release:
    types: [published]

jobs:
  build_and_upload_assets:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Set up Zulu JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew :dgrv4_Gateway_serv:clean :dgrv4_Gateway_serv:bootJar

      - name: Create release directory
        run: mkdir -p ${{ github.event.repository.name }}-${{ github.event.release.tag_name }}-h2-build/keys

      - name: Copy JAR and other assets
        run: |
          mv dgrv4_Gateway_serv/build/libs/* ${{ github.event.repository.name }}-${{ github.event.release.tag_name }}-h2-build/
          mv dgrv4_Gateway_serv/keys/* ${{ github.event.repository.name }}-${{ github.event.release.tag_name }}-h2-build/keys/
          mv ${{ github.event.repository.name }}-${{ github.event.release.tag_name }}-h2-build/*.jar ${{ github.event.repository.name }}-${{ github.event.release.tag_name }}-h2-build/digirunner.jar

      - name: Zip release assets
        run: |
          zip -r ${{ github.event.repository.name }}-${{ github.event.release.tag_name }}-h2-build.zip ${{ github.event.repository.name }}-${{ github.event.release.tag_name }}-h2-build/

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.event.repository.name }}-${{ github.event.release.tag_name }}-h2-build.zip
          asset_name: ${{ github.event.repository.name }}-${{ github.event.release.tag_name }}-h2-build.zip
          asset_content_type: application/zip